# custom_redis_data_exporter.py
import redis
from prometheus_client import start_http_server, Histogram
import time
import random

# Connect to Redis
r = redis.Redis(host='redis', port=6379, db=0)

# Define a Prometheus Histogram metric for your feature
# 'my_feature_value_bucket' will be generated by Prometheus client
MY_FEATURE_VALUES = Histogram('my_feature_values', 'Distribution of values for my custom feature', buckets=[0, 10, 20, 30, 40, 50])

def collect_my_feature_data():
    # This is where you'd read from Redis, e.g., if you have a list of values
    # For demonstration, let's simulate reading a value
    try:
        # Example: Assuming you have a Redis key 'sensor_readings' as a List
        # values = [float(x) for x in r.lrange('sensor_readings', 0, -1)]
        # For this example, just generate random data
        value = random.uniform(0, 50)
        MY_FEATURE_VALUES.observe(value)
        print(f"Observed value: {value}")
    except Exception as e:
        print(f"Error collecting data: {e}")

if __name__ == '__main__':
    start_http_server(8001) # Expose metrics on port 8001
    print("Custom Redis data exporter running on port 8001")
    while True:
        collect_my_feature_data()
        time.sleep(5) # Collect data every 5 seconds